import configparser
import logging

from aiogram import Bot, Dispatcher
from aiogram import executor
from aiogram import types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from keyboards.inline_keyboards import clothing_keyboard, delivery_keyboard
from services.exchange import get_currency_rate
from utils.validation import calculate_insurance_price, calculate_commission_price

config = configparser.ConfigParser(empty_lines_in_values=False, allow_no_value=True)
config.read("setting/config.ini")
bot_token = config.get('BOT_TOKEN', 'BOT_TOKEN')

bot = Bot(token=bot_token, parse_mode="HTML")
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
logging.basicConfig(level=logging.INFO)


@dp.message_handler(Command('start'))
async def start_handler(message: types.Message):
    keyboard_clothes = clothing_keyboard()
    await message.reply("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞:", reply_markup=keyboard_clothes)


@dp.callback_query_handler(lambda c: c.data == 'down_jacket_down')
async def down_jacket_handler(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–ª—è –ø—É—Ö–æ–≤–∏–∫–∞"""
    delivery = delivery_keyboard()
    await bot.send_message(callback_query.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=delivery)


@dp.callback_query_handler(lambda c: c.data == 'scheduled_aircraft')
async def scheduled_aircraft_handler(callback_query: types.CallbackQuery):
    """–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö"""
    await bot.send_message(callback_query.from_user.id,
                           "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö üá®üá≥ (–∫–æ–ø–µ–π–∫–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É):")


@dp.message_handler(content_types=types.ContentType.TEXT)
async def process_price(message: types.Message, state: FSMContext):
    try:
        cny_rate = get_currency_rate('CNY')  # –ö—É—Ä—Å –Æ–∞–Ω—è –∫ —Ä—É–±–ª—é
        usd_rate = get_currency_rate('USD')  # –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
        price = float(message.text)  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –Æ–∞–Ω—è—Ö –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        aircraft_cost = (35 * usd_rate) * 2  # –¶–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–µ–π—Å–æ–≤—ã–º —Å–∞–º–æ–ª–µ—Ç–æ–º 2 –≤–µ—Å —Ç–æ–≤–∞—Ä–∞
        delivery_rub_cn = 30 * cny_rate  # –¶–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ Poizon –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–π
        insurance_price = calculate_insurance_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
        commission_price = calculate_commission_price(price)  # –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–æ–º–∏—Å—Å–∏–∏
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è
        final_purchase_price = (price * cny_rate) + delivery_rub_cn + insurance_price + aircraft_cost + commission_price
        rounded_number = round(final_purchase_price, 2)  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2—Ö –∑–Ω–∞–∫–æ–≤
        message_text = f"<b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {rounded_number} —Ä—É–±.</b>\n\n–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ /start"
        await bot.send_message(message.chat.id, message_text)
        await state.finish()
    except ValueError:
        await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
